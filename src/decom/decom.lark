// A bunch of words
start: value*

value: include
     | uselist
     | measurand
     | function

include: "INCLUDE" "=" PATH
uselist: NAME "." "USELIST" "=" "{" measurand* "}"

function: name "=" NAME "(" ARG* ")"

comp: COMP comp_op?
parameter: "[" comp ("+" comp)* iterator? "]"
         | "[" "(" COMP ("+" COMP)* ")" comp_op? iterator? "]"

name: NAME
    | NAME "." NAME
measurand: name "=" filter? parameter (";" interp (";" euc)?)? ";"?
interp: INTERP
euc: EUC_TOK? "[" FLOAT ("," FLOAT)~0..2 "]"

iterator: "++" INT ("<" INT)?
filter: FILTER_TOK "(" INT iterator? ")"
comp_op: COMP_OP

INTERP: "u" | "1c" | "2c"

FILTER_TOK: "mfo" | "mfv"
EUC_TOK: "euc"i
INT:   /\d+/
FLOAT: /\d+(?:\.\d+)?(?:e[\+\-]?\d+(?:\.\d+))?/i
NAME:  /[a-zA-Z0-9_-]+/
COMP:  /[0-9\:\-]+[R]?/
COMP_OP: /R/i
ARG:   /[-a-zA-Z0-9,]+/
ANY:   /^(?<!INCLUDE|USELIST).+/
PATH:  /.+/

// imports
%import common.WS

// Disregard whitespace in text
%ignore WS
